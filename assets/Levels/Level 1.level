[
  {
    "uid": 1115,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 94
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.06666667,
                "y": 1.0
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.0,
                "y": 0.8888889
              },
              {
                "x": 0.0,
                "y": 1.0
              }
            ]
          },
          "uid": 95
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1116,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1117,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1118,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1119,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1120,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1121,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1122,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1123,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1124,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1125,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1126,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1127,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1128,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1129,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1130,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1131,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1132,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1133,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1134,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1135,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1136,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1137,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1138,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1139,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1140,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1141,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1142,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1143,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1144,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1145,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1146,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1147,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1148,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1149,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1150,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1151,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1152,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1153,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1154,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1155,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1156,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1157,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1158,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1159,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1160,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1161,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1162,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1163,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1164,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1165,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1166,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1167,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1168,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1169,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1170,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1171,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1172,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1173,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1174,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1175,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1176,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1177,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1178,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1179,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1180,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1181,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1182,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1183,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1184,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1185,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1186,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1187,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1188,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1189,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1190,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1191,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1192,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1193,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1194,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1195,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1196,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1197,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1198,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1199,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1200,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1201,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1202,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1203,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1204,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1205,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1206,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1207,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1208,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1209,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1210,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1211,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1212,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1213,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1214,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1215,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1216,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1217,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1218,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1219,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1220,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1221,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1222,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1223,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1224,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1225,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1226,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1227,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1228,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1229,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1230,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1231,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1232,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1233,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1234,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1235,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1236,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1237,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1238,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1239,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1240,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1241,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1242,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1243,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1244,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1245,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1246,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1247,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1248,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1249,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1250,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1251,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1252,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1253,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1254,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1255,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1256,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1257,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1258,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1259,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1260,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1261,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1262,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1263,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1264,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1265,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1266,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1267,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1268,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1269,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1270,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1271,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1272,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1273,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1274,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1275,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1276,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1277,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1278,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1279,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1280,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1281,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1282,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1283,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1284,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1285,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1286,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1287,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1288,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1289,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1290,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1291,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1292,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1293,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1294,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1295,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1296,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1297,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1298,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1299,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1300,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1301,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1302,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1303,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1304,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1305,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1306,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1307,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1308,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1309,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1310,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1311,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1312,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1313,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1314,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1315,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1316,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1317,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1318,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1319,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1320,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1321,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1322,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1323,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1324,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1325,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1326,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1327,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1328,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1329,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1330,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1331,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1332,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1333,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1334,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1335,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1336,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1337,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1338,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1339,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1340,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1341,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1342,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1343,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1344,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1345,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1346,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1347,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1348,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1349,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1350,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1351,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1352,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1353,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1354,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1355,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1356,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1357,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1358,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1359,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1360,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1361,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1362,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1363,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1364,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1365,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1366,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1367,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1368,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1369,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1370,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1371,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1372,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1373,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1374,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1375,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1376,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1377,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1378,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1379,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1380,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1381,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1382,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1383,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1384,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1385,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1386,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1387,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1388,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1389,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1390,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1391,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1392,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1393,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1394,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1395,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1396,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1397,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1398,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1399,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1400,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1401,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1402,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1403,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1404,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1405,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1406,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1407,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1408,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1409,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1410,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1411,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1412,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1413,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1414,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1415,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1416,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1417,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1418,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1419,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1420,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1421,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1422,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1423,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1424,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1425,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1426,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1427,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1428,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1429,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1430,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1431,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1432,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1433,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1434,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1435,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1436,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1437,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1438,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1439,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1440,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1441,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1442,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1443,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1444,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1445,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1446,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1447,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1448,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1449,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1450,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1451,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1452,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1453,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1454,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1455,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1456,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1457,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1458,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1459,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1460,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1461,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1462,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1463,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1464,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1465,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1466,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1467,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1468,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1469,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1470,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1471,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1472,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1473,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1474,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1475,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1476,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1477,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1478,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1479,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1480,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1481,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1482,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1483,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1484,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1485,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1486,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1487,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1488,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1489,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1490,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1491,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1492,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1493,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1494,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1495,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1496,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1497,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1498,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1499,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1500,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1501,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1502,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1503,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1504,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1505,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1506,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1507,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1508,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1509,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1510,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1511,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1512,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1513,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1514,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1515,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1516,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1517,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1518,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1519,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1520,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1521,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1522,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1523,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1524,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1525,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1526,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1527,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1528,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1529,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1530,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1531,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1532,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1533,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1534,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1535,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1536,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1537,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1538,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1539,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1540,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1541,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1542,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1543,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1544,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1545,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1546,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1547,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1548,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1549,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1550,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1551,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1552,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1553,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1554,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1555,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1556,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1557,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1558,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1559,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1560,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1561,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1562,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1563,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1564,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1565,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1566,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1567,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1568,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1569,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1570,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1571,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1572,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1573,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1574,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1575,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1576,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1577,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1578,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1579,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1580,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1581,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1582,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1583,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1584,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1585,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1586,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1587,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1588,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1589,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1590,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1591,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1592,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1593,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1594,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1595,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1596,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1597,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1598,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1599,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1600,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1601,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1602,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1603,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1604,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1605,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1606,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1607,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1608,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1609,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1610,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1611,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1612,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1613,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1614,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1615,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1616,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1617,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1618,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1619,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1620,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1621,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1622,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1623,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1624,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1625,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1626,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1627,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1628,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1629,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1630,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1631,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1632,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1633,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1634,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1635,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1636,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1637,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1638,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1639,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1640,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1641,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1642,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1643,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1644,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1645,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1646,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1647,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1648,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1649,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1650,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1651,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1652,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1653,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1654,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1655,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1656,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1657,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1658,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1659,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1660,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 126
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.0,
                "y": 0.6666667
              },
              {
                "x": 0.0,
                "y": 0.7777778
              }
            ]
          },
          "uid": 127
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1661,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1662,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1663,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1664,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1665,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1666,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1667,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1668,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1669,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1670,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1671,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1672,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1673,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1674,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1675,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1676,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1677,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1678,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1679,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1680,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1681,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1682,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1683,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1684,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1685,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1686,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1687,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1688,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1689,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1690,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1691,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1692,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1693,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1694,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1695,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1696,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1697,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1698,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1699,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1700,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1701,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1702,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1703,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1704,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1705,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1706,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1707,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1708,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1709,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1710,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1711,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1712,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1713,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1714,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1715,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1716,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1717,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1718,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1719,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1720,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1721,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1722,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1723,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1724,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1725,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1726,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1727,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1728,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1729,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1730,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1731,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1732,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1733,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1734,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1735,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1736,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1737,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1738,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1739,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1740,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1741,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1742,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1743,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1744,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1745,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1746,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1747,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1748,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1749,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1750,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1751,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1752,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1753,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1754,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1755,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1756,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1757,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1758,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1759,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1760,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1761,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1762,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1763,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1764,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1765,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1766,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1767,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1768,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1769,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1770,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1771,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1772,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1773,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1774,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1775,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1776,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1777,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1778,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1779,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1780,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1781,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1782,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1783,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1784,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1785,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1786,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1787,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1788,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1789,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1790,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1791,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1792,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1793,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1794,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1795,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1796,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1797,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1798,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1799,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1800,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1801,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1802,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1803,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1804,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1805,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1806,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1807,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1808,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1809,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1810,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1811,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1812,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1813,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1814,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1815,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1816,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1817,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1818,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1819,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1820,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1821,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1822,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1823,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1824,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1825,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1826,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1827,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1828,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1829,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1830,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1831,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1832,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1833,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1834,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1835,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1836,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1837,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1838,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1839,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1840,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1841,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1842,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1843,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1844,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1845,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1846,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1847,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1848,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1849,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1850,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1851,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1852,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1853,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1854,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1855,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1856,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1857,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1858,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1859,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1860,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1861,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1862,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1863,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1864,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1865,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1866,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1867,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1868,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1869,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1870,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1871,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1872,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1873,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1874,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1875,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1876,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1877,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1878,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1879,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1880,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1881,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1882,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1883,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1884,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1885,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1886,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1887,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1888,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1889,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1890,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1891,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1892,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1893,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1894,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1895,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1896,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1897,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1898,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1899,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1900,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1901,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1902,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1903,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1904,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1905,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1906,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1907,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1908,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1909,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1910,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1911,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1912,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1913,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1914,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1915,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1916,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1917,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1918,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1919,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1920,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1921,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1922,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1923,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1924,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1925,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1926,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1927,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1928,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1929,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1930,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1931,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1932,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1933,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1934,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1935,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1936,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1937,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1938,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1939,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1940,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1941,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1942,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1943,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1944,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1945,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1946,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1947,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1948,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1949,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1950,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1951,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1952,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1953,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1954,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1955,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1956,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1957,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1958,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1959,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1960,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1961,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1962,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1963,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1964,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1965,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1966,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1967,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1968,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1969,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1970,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1971,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1972,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1973,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1974,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1975,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1976,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1977,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1978,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1979,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1980,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1981,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1982,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1983,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1984,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1985,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1986,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1987,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1988,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1989,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1990,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1991,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1992,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1993,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1994,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1995,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1996,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1997,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1998,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 1999,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2000,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2001,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2002,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2003,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2004,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2005,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2006,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2007,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2008,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2009,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2010,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2011,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2012,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2013,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2014,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2015,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2016,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2017,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2018,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2019,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2020,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2021,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2022,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2023,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2024,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2025,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2026,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2027,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2028,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2029,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2030,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2031,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2032,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2033,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2034,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2035,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2036,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2037,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2038,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2039,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2040,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2041,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2042,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2043,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2044,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2045,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2046,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2047,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2048,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2049,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2050,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2051,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2052,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2053,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2054,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2055,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2056,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2057,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2058,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2059,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2060,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2061,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2062,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2063,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2064,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2065,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2066,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2067,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2068,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2069,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2070,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2071,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2072,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2073,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2074,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2075,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2076,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2077,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2078,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2079,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2080,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2081,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2082,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2083,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2084,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2085,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2086,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2087,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2088,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2089,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2090,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2091,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2092,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2093,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2094,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2095,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2096,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2097,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2098,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2099,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2100,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2101,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2102,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2103,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2104,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2105,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2106,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2107,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2108,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2109,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2110,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2111,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2112,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2113,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2114,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2115,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2116,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2117,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2118,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2119,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2120,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2121,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2122,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2123,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2124,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2125,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2126,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2127,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2128,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2129,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2130,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2131,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2132,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2133,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2134,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2135,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2136,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2137,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2138,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2139,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2140,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2141,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2142,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2143,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2144,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2145,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2146,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2147,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2148,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2149,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2150,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2151,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2152,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2153,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2154,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2155,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2156,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2157,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2158,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2159,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2160,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2161,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2162,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2163,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2164,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2165,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2166,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2167,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2168,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2169,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2170,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2171,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2172,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2173,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2174,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2175,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2176,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2177,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2178,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2179,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2180,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2181,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2182,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2183,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2184,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2185,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2186,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2187,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2188,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2189,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2190,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2191,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2192,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2193,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2194,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2195,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2196,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2197,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2198,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2199,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2200,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2201,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2202,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2203,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2204,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2205,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2206,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2207,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2208,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2209,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2210,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2211,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2212,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2213,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2214,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2215,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2216,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2217,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2218,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2219,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2220,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2221,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2222,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  }
]