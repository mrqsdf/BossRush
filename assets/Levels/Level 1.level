[
  {
    "uid": 2308,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 94
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.06666667,
                "y": 1.0
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.0,
                "y": 0.8888889
              },
              {
                "x": 0.0,
                "y": 1.0
              }
            ]
          },
          "uid": 95
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2309,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2310,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2311,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2312,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2313,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2314,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2315,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2316,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2317,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2318,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2319,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2320,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2321,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2322,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2323,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2324,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2325,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2326,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2327,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2328,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2329,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2330,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2331,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2332,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2333,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2334,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2335,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2336,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2337,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2338,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2339,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2340,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2341,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2342,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2343,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2344,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2345,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2346,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2347,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2348,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2349,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2350,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2351,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2352,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2353,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2354,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2355,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2356,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2357,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2358,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2359,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2360,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2361,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2362,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2363,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2364,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2365,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2366,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2367,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2368,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2369,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2370,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2371,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2372,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2373,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2374,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2375,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2376,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2377,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2378,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2379,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2380,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2381,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2382,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2383,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2384,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2385,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2386,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2387,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2388,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2389,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2390,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2391,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2392,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2393,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2394,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2395,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2396,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2397,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2398,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2399,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2400,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2401,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2402,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2403,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2404,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2405,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2406,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2407,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2408,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2409,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2410,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2411,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2412,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2413,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2414,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2415,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2416,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2417,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2418,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2419,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2420,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2421,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2422,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2423,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2424,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2425,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2426,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2427,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2428,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2429,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2430,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2431,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2432,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2433,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2434,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2435,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2436,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2437,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2438,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2439,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2440,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2441,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2442,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2443,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2444,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2445,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2446,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2447,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2448,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2449,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2450,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2451,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2452,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2453,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2454,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2455,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2456,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2457,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2458,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2459,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2460,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2461,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2462,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2463,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2464,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2465,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2466,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2467,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2468,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2469,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2470,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2471,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2472,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2473,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2474,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2475,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2476,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2477,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2478,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2479,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2480,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2481,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2482,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2483,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2484,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2485,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2486,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2487,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2488,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2489,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2490,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2491,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2492,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2493,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2494,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2495,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2496,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2497,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2498,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2499,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2500,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2501,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2502,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2503,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2504,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2505,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2506,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2507,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2508,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2509,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2510,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2511,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2512,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2513,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2514,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2515,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2516,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2517,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2518,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2519,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2520,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2521,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2522,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2523,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2524,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2525,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2526,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2527,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2528,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2529,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2530,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2531,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2532,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2533,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2534,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2535,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2536,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2537,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2538,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2539,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2540,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2541,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2542,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2543,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2544,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2545,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2546,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2547,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2548,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2549,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2550,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2551,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2552,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2553,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2554,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2555,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2556,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2557,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2558,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2559,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2560,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2561,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2562,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2563,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2564,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2565,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2566,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2567,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2568,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2569,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2570,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2571,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2572,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2573,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2574,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2575,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2576,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2577,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2578,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2579,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2580,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2581,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2582,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2583,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2584,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2585,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2586,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2587,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2588,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2589,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2590,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2591,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2592,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2593,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2594,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2595,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2596,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2597,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2598,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2599,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2600,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2601,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2602,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2603,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2604,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2605,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2606,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2607,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2608,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2609,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2610,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2611,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2612,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2613,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2614,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2615,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2616,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2617,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2618,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2619,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2620,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2621,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2622,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2623,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2624,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2625,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2626,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2627,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2628,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2629,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2630,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2631,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2632,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2633,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2634,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2635,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2636,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2637,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2638,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2639,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2640,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2641,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2642,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2643,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2644,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2645,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2646,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2647,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2648,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2649,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2650,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2651,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2652,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2653,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2654,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2655,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2656,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2657,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2658,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2659,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2660,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2661,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2662,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2663,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2664,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2665,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2666,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2667,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2668,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2669,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2670,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2671,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2672,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2673,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2674,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2675,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2676,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2677,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2678,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2679,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2680,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2681,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2682,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2683,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2684,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2685,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2686,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2687,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2688,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2689,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2690,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2691,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2692,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2693,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2694,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2695,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2696,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2697,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2698,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2699,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2700,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2701,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2702,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2703,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2704,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2705,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2706,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2707,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2708,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2709,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2710,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2711,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2712,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2713,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2714,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2715,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2716,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2717,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2718,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2719,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2720,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2721,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2722,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2723,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2724,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2725,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2726,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2727,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2728,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2729,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2730,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2731,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2732,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2733,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2734,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2735,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2736,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2737,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2738,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2739,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2740,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2741,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2742,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2743,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2744,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2745,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2746,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2747,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2748,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2749,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2750,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2751,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2752,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2753,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2754,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2755,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2756,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2757,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2758,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2759,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2760,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2761,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2762,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2763,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2764,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2765,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2766,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2767,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2768,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2769,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2770,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2771,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2772,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2773,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2774,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2775,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2776,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2777,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2778,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2779,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2780,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2781,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2782,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2783,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2784,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2785,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2786,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2787,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2788,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2789,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2790,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2791,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2792,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2793,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2794,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2795,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2796,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2797,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2798,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2799,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2800,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2801,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2802,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2803,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2804,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2805,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2806,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2807,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2808,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2809,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2810,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2811,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2812,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2813,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2814,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2815,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2816,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2817,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2818,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2819,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2820,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2821,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2822,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2823,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2824,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2825,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2826,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2827,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2828,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2829,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2830,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2831,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2832,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2833,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2834,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2835,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2836,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2837,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2838,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2839,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2840,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2841,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2842,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2843,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2844,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2845,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2846,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2847,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2848,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2849,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2850,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2851,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2852,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2853,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 1.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 126
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.0,
                "y": 0.6666667
              },
              {
                "x": 0.0,
                "y": 0.7777778
              }
            ]
          },
          "uid": 127
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2854,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2855,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2856,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2857,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2858,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2859,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2860,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2861,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2862,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2863,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2864,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2865,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2866,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2867,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2868,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2869,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2870,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2871,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2872,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2873,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2874,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2875,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2876,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2877,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2878,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2879,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2880,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2881,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2882,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2883,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2884,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2885,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2886,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2887,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2888,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2889,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2890,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2891,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2892,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2893,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2894,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2895,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2896,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2897,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2898,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2899,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2900,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2901,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 13.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2902,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2903,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2904,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2905,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2906,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2907,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2908,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2909,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2910,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2911,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2912,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2913,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2914,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2915,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2916,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2917,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2918,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2919,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2920,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2921,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2922,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2923,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2924,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2925,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2926,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2927,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2928,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2929,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2930,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2931,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2932,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2933,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2934,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2935,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2936,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2937,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2938,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2939,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2940,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2941,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2942,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2943,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2944,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2945,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 18.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2946,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2947,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2948,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2949,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2950,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2951,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2952,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2953,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2954,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2955,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2956,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2957,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2958,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2959,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2960,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2961,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2962,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2963,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2964,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2965,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2966,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2967,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2968,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2969,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2970,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2971,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2972,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2973,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2974,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2975,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2976,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2977,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2978,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2979,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2980,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2981,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2982,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2983,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2984,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2985,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2986,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2987,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2988,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2989,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2990,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2991,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2992,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2993,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2994,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2995,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2996,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2997,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2998,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 2999,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3000,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3001,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3002,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3003,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3004,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3005,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3006,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3007,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3008,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3009,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3010,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3011,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3012,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3013,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3014,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3015,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3016,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3017,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3018,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3019,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3020,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3021,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3022,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3023,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3024,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3025,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3026,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3027,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3028,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3029,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3030,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3031,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3032,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3033,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3034,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3035,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3036,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3037,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3038,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3039,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3040,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3041,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3042,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3043,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3044,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3045,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3046,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3047,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3048,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3049,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3050,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3051,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3052,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3053,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3054,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3055,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3056,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3057,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3058,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3059,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3060,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3061,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3062,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3063,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3064,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3065,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3066,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3067,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3068,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3069,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3070,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3071,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3072,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3073,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3074,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3075,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3076,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3077,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3078,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3079,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3080,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3081,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3082,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3083,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3084,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3085,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3086,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3087,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3088,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3089,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3090,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3091,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3092,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3093,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3094,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3095,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3096,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3097,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3098,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3099,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3100,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3101,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3102,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3103,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3104,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3105,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3106,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3107,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3108,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3109,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3110,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3111,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3112,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3113,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3114,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3115,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3116,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3117,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3118,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3119,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3120,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3121,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3122,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3123,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3124,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3125,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3126,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3127,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3128,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3129,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3130,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3131,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3132,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3133,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3134,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3135,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3136,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3137,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3138,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3139,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3140,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3141,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3142,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3143,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3144,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3145,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3146,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3147,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3148,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3149,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3150,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3151,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3152,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3153,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3154,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3155,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3156,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3157,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3158,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3159,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3160,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3161,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3162,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3163,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3164,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3165,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3166,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3167,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3168,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3169,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3170,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3171,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3172,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3173,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3174,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3175,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3176,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3177,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3178,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3179,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 2.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 97
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 1.0
              },
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              },
              {
                "x": 0.06666667,
                "y": 1.0
              }
            ]
          },
          "uid": 98
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3180,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3181,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3182,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3183,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3184,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3185,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3186,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3187,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3188,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3189,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3190,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3191,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3192,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3193,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3194,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3195,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3196,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3197,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3198,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3199,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3200,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3201,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3202,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3203,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 0.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 123
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.13333334,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.6666667
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              }
            ]
          },
          "uid": 124
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3204,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3205,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3206,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3207,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3208,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3209,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3210,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3211,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3212,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3213,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3214,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3215,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3216,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3217,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3218,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3219,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3220,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3221,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3222,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3223,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3224,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3225,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3226,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3227,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3228,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3229,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3230,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3231,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3232,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3233,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3234,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3235,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3236,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3237,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3238,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3239,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3240,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3241,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3242,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3243,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3244,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3245,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3246,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3247,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3248,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3249,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3250,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3251,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3252,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3253,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3254,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3255,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3256,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3257,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3258,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3259,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3260,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3261,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3262,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3263,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3264,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3265,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3266,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3267,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3268,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3269,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3270,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3271,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3272,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3273,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3274,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3275,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3276,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3277,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3278,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3279,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3280,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3281,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3282,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3283,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3284,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3285,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3286,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3287,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3288,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3289,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3290,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3291,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3292,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3293,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3294,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3295,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3296,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3297,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3298,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3299,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3300,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3301,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3302,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3303,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3304,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3305,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3306,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3307,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3308,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3309,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3310,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3311,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3312,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3313,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3314,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3315,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3316,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3317,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3318,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3319,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3320,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3321,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3322,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3323,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3324,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3325,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3326,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3327,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3328,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3329,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3330,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3331,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3332,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3333,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3334,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3335,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3336,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3337,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3338,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3339,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3340,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3341,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3342,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3343,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3344,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3345,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3346,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3347,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3348,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3349,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3350,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3351,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3352,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3353,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3354,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3355,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3356,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3357,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3358,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3359,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3360,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.625,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3361,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3362,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 32.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 100
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.13333334,
                "y": 0.8888889
              },
              {
                "x": 0.13333334,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.7777778
              },
              {
                "x": 0.06666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 101
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3363,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3364,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 28.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3365,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 27.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3366,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3367,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3368,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3369,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.125,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3370,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.625,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3371,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3372,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3373,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3374,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3375,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.625,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3376,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3377,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 6.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3378,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 3.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3379,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 154
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.6666667,
                "y": 0.7777778
              },
              {
                "x": 0.6666667,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.6666667
              },
              {
                "x": 0.6,
                "y": 0.7777778
              }
            ]
          },
          "uid": 155
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3380,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3381,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.875,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3382,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 8.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3383,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3384,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 12.125,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3385,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3386,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 17.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3387,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3388,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3389,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 22.375,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3390,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 25.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3391,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3392,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3393,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 31.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 163
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.8666667,
                "y": 0.6666667
              },
              {
                "x": 0.8666667,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.5555556
              },
              {
                "x": 0.8,
                "y": 0.6666667
              }
            ]
          },
          "uid": 164
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3394,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 29.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3395,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 30.875,
            "y": 0.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3396,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 26.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3397,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.875,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3398,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 24.625,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3399,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 23.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3400,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 21.375,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3401,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3402,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 20.125,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3403,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 19.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3404,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3405,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 16.375,
            "y": 1.375
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3406,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 15.125,
            "y": 2.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3407,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 14.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3408,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 10.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3409,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 11.875,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3410,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 9.125,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3411,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.125,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3412,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 7.375,
            "y": 1.625
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3413,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 5.875,
            "y": 0.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3414,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 4.375,
            "y": 1.875
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  },
  {
    "uid": 3415,
    "name": "Sprite_Object_Gen",
    "components": [
      {
        "type": "fr.mrqsdf.engine2d.jade.Transform",
        "properties": {
          "position": {
            "x": 2.875,
            "y": 1.125
          },
          "isVisible": true,
          "scale": {
            "x": 0.25,
            "y": 0.25
          },
          "rotation": 0.0,
          "zIndex": -5,
          "uid": 171
        }
      },
      {
        "type": "fr.mrqsdf.engine2d.components.SpriteRenderer",
        "properties": {
          "color": {
            "x": 1.0,
            "y": 1.0,
            "z": 1.0,
            "w": 1.0
          },
          "sprite": {
            "width": 16.0,
            "height": 16.0,
            "texture": {
              "filepath": "assets\\images\\bossrush\\tileset\\Dungeon_Tile_Set2.png",
              "width": 240,
              "height": 144
            },
            "texCoords": [
              {
                "x": 0.93333334,
                "y": 0.8888889
              },
              {
                "x": 0.93333334,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.7777778
              },
              {
                "x": 0.8666667,
                "y": 0.8888889
              }
            ]
          },
          "uid": 172
        }
      }
    ],
    "doSerialisation": true,
    "isDead": false
  }
]